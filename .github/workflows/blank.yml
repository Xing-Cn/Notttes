name: 额の自动化程序壹号~改
on:
  push:
    branches: [ main ]
  workflow_dispatch:

permissions:
  contents: write

jobs:
  quick-update:
    runs-on: ubuntu-latest
    steps:
    - name: 获取代码
      uses: actions/checkout@v4
      
    - name: 快速统计
      id: stats
      run: |
        echo "🔍开始快速统计..."
        CHANGED_FILES=$(git diff --name-only HEAD~1 HEAD 2>/dev/null | grep ".md$" | wc -l || echo "0")
        TOTAL_FILES=$(find . -name "*.md" | wc -l)
        echo "changed_count=$CHANGED_FILES" >> $GITHUB_OUTPUT
        echo "total_count=$TOTAL_FILES" >> $GITHUB_OUTPUT
        
    - name: 智能更新README
      run: |
        echo "📝检查是否需要更新..."
        
        # 判断是否需要更新
        if [ "${{ steps.stats.outputs.changed_count }}" -gt 0 ] || 
           ! grep -q "笔记总数: ${{ steps.stats.outputs.total_count }} 篇" README.md 2>/dev/null; then
          
          echo "🔄需要更新，准备替换统计信息..."
          
          # 方法：先删除旧统计，再添加新统计（最稳定）
          # 删除旧的统计区块
          if grep -q "### 🚀实时统计" README.md; then
            echo "🗑️删除旧统计区块..."
            sed -i '/### 🚀实时统计/,/*auto updata*/d' README.md
          fi
          
          # 添加新的统计区块（逐行添加，避免多行文本问题）
          echo "" >> README.md
          echo "### 🚀实时统计" >> README.md
          echo "> 最后同步: $(date '+%Y-%m-%d %H:%M')" >> README.md
          echo "" >> README.md
          echo "- 笔记总数: ${{ steps.stats.outputs.total_count }} 篇" >> README.md
          echo "- 本次更新: ${{ steps.stats.outputs.changed_count }} 篇" >> README.md
          echo "- 检查状态: ✅运行正常" >> README.md
          echo "" >> README.md
          echo "*auto updata*" >> README.md
          
          echo "✅README 更新完成"
          echo "should_commit=true" >> $GITHUB_ENV
        else
          echo "⏭️统计无变化，跳过更新"
          echo "should_commit=false" >> $GITHUB_ENV
        fi
        
    - name: 条件提交
      if: env.should_commit == 'true'
      run: |
        echo "🚀开始提交更新..."
        git config --local user.email "a138196861120@163.com"
        git config --local user.name "Xing-Cn"
        git add README.md
        git commit -m "📊更新统计: +${{ steps.stats.outputs.changed_count }} 篇新笔记"
        git push
        echo "🎉提交完成！"