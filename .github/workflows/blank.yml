name: 额の自动化程序壹号~改

on:
  push:
    branches: [ main ]
  workflow_dispatch:

permissions:
  contents: write

jobs:
  ctf-stats:
    runs-on: ubuntu-latest
    steps:
    - name: 获取代码
      uses: actions/checkout@v4
      
    - name: 快速统计
      id: stats
      run: |
        echo "🔍开始统计笔记..."
        
        # 获取当前数量
        CURRENT_COUNT=$(find CTFFFF!!! -name "*.md" 2>/dev/null | wc -l || echo "0")
        
        # 获取上一次数量(如果失败就用当前数量)
        PREVIOUS_COUNT=$CURRENT_COUNT
        if git cat-file -e HEAD:CTFFFF!!! 2>/dev/null; then
          PREVIOUS_COUNT=$(git ls-tree -r --name-only HEAD:CTFFFF!!! 2>/dev/null | grep "\.md$" | wc -l || echo "$CURRENT_COUNT")
        fi
        
        # 计算净变化(考虑新增和删除)
        CTF_CHANGED=$((CURRENT_COUNT - PREVIOUS_COUNT))
        
        # 显示变化方向
        if [ "$CTF_CHANGED" -gt 0 ]; then
          CHANGE_DIRECTION="+$CTF_CHANGED"
        elif [ "$CTF_CHANGED" -lt 0 ]; then
          CHANGE_DIRECTION="$CTF_CHANGED"  # 自动显示负号
        else
          CHANGE_DIRECTION="0"
        fi
        
        echo "📊文件数量 : $PREVIOUS_COUNT → $CURRENT_COUNT (变化 : $CHANGE_DIRECTION)"
        echo "📊统计完成 : 笔记总数 $CURRENT_COUNT 篇, 本次更新 $CTF_CHANGED 篇"
        
        echo "ctf_changed=$CTF_CHANGED" >> $GITHUB_OUTPUT
        echo "ctf_total=$CURRENT_COUNT" >> $GITHUB_OUTPUT
        
    - name: 更新README统计
      run: |
        echo "📝检查是否需要更新README..."
        # 显示北京时间 (UTC+8)
        BEIJING_TIME=$(TZ='Asia/Shanghai' date '+%Y-%m-%d %H:%M')

        # 判断触发方式
        if [ "${{ github.event_name }}" == "workflow_dispatch" ]; then
          TRIGGER_SOURCE="🔄手动触发"
        else
          TRIGGER_SOURCE="✅自动运行"
        fi

        # 判断是否需要更新: 如果有文件变化, 或者笔记总数变了, 或者手动触发
        if [ "${{ steps.stats.outputs.ctf_changed }}" -ne 0 ] || 
           [ "${{ github.event_name }}" == "workflow_dispatch" ] ||
           ! grep -q "笔记总数: ${{ steps.stats.outputs.ctf_total }} 篇" README.md 2>/dev/null; then
      
          echo "🔄需要更新, 开始处理README..."
          
          # 删除旧的统计区块(如果存在)
          if grep -q "### 🚀笔记统计" README.md; then
            echo "🗑️删除旧统计区块..."
            sed -i '/### 🚀笔记统计/,/*auto updata*/d' README.md
          fi
          
          # 添加新的统计区块
          echo "" >> README.md
          echo "### 🚀笔记统计" >> README.md
          echo "> 最后同步: $BEIJING_TIME" >> README.md
          echo "" >> README.md
          echo "- 笔记总数: ${{ steps.stats.outputs.ctf_total }} 篇" >> README.md
          
          # 智能显示更新数量(带正负号)
          if [ "${{ steps.stats.outputs.ctf_changed }}" -gt 0 ]; then
            echo "- 本次更新: +${{ steps.stats.outputs.ctf_changed }} 篇" >> README.md
          elif [ "${{ steps.stats.outputs.ctf_changed }}" -lt 0 ]; then
            echo "- 本次更新: ${{ steps.stats.outputs.ctf_changed }} 篇" >> README.md
          else
            echo "- 本次更新: 0 篇" >> README.md
          fi
          
          echo "- 触发方式: $TRIGGER_SOURCE" >> README.md
          echo "" >> README.md
          echo "*auto updata*" >> README.md
          
          echo "✅README更新完成"
          echo "should_commit=true" >> $GITHUB_ENV
        else
          echo "⏭️统计无变化，跳过更新"
          echo "should_commit=false" >> $GITHUB_ENV
        fi
        
    - name: 条件提交
      if: env.should_commit == 'true'
      run: |
        echo "🚀提交统计更新..."
        git config --local user.email "a138196861120@163.com"
        git config --local user.name "Xing-Cn"
        git add README.md
        
        # 智能提交信息
        if [ "${{ steps.stats.outputs.ctf_changed }}" -gt 0 ]; then
          git commit -m "📊更新统计: +${{ steps.stats.outputs.ctf_changed }} 篇"
        elif [ "${{ steps.stats.outputs.ctf_changed }}" -lt 0 ]; then
          git commit -m "📊更新统计: ${{ steps.stats.outputs.ctf_changed }} 篇"
        else
          git commit -m "📊更新统计"
        fi
        
        git push
        echo "🎉提交完成！"